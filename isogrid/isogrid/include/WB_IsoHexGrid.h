#pragma once

struct PApplet;

#include "typedef.h"
#include <array>
#include <math.h>
//

#include "WB_IsoGridCell.h"
#include "WB_IsoGridLine.h"

struct WB_IsoHexGrid
{
  std::array<double, 2> size;
  vec<double> origin;

  vec<vec<int>> labels = { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 6, 6, 6,  -1, -1, 6,  6, 6, -1, -1, -1, -1, 6, 6, 6,
                             -1, -1, 6,  6, 6, -1, -1, -1, -1, 6, 6, 6,  -1, -1, 6,  6, 6, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4,  4,  4,  4,  4,  4,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, 4,  4,  4,  -1, -1, 4,  4,  4,  -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 5,  5,  5,  5,  5,  5,  -1, -1, -1, 5,  5,  5,
                             -1, -1, 5,  5,  5,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4,  4,  4, 4, 4, 4,  5,  5,  5,  5, 5, 5, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5, 5, 5, -1, -1, -1, -1, 4, 4, 4, -1, -1, 4,  4, 4, -1 },
                           { 4,  4,  4, 4, 4, 4,  5,  5,  5,  5, 5, 5, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5, 5, 5, -1, -1, -1, -1, 4, 4, 4, -1, -1, 4,  4, 4, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3,  3,  3,  -1, -1, 3,  3,  3,  -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3,  3,  3,  3,  3,  3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  7,  7,  7,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  7,  7,  7 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, 5,  5,  5,  -1, 5,  5,  5,  5,  5,  5,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5,  5,  5 },
                           { 0,  0,  5,  5,  5,  0,  5,  5,  5,  5,  5,  5,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  5,  5,  5 },
                           { 0,  0,  5,  5,  5,  0,  5,  5,  5,  5,  5,  5,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  5,  5,  5 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5,  5,  5,
                             -1, -1, 5,  5,  5,  -1, 5,  5,  5,  5,  5,  5,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3, 3, 3,  -1, -1, 3, 3, 3, -1, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5,  5, 5, -1, 5,  5,  5, 5, 5, 5,  3,  3,  3,  3, 3, 3 },
                           { -1, -1, -1, 3, 3, 3,  -1, -1, 3, 3, 3, -1, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5,  5, 5, -1, 5,  5,  5, 5, 5, 5,  3,  3,  3,  3, 3, 3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, 5,  5,  5,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 5,  5,  5,  5,  5,  5,  -1, -1, -1, 5,  5,  5 },
                           { 0,  0,  5,  5,  5,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 5,  5,  5,  5,  5,  5,  0,  0,  0,  5,  5,  5 },
                           { 0,  0,  5,  5,  5,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 5,  5,  5,  5,  5,  5,  0,  0,  0,  5,  5,  5 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, 5, 5, 5, -1, 5, 5, 5, 5, 5, 5, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5, 5, 5, -1, 5, 5, 5, 5, 5, 5, -1, -1, -1, 5, 5, 5 },
                           { 0,  0,  5, 5, 5, 0,  5, 5, 5, 5, 5, 5, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5, 5, 5, -1, 5, 5, 5, 5, 5, 5, 0,  0,  0,  5, 5, 5 },
                           { 0,  0,  5, 5, 5, 0,  5, 5, 5, 5, 5, 5, -1, -1, -1, 5, 5, 5,
                             -1, -1, 5, 5, 5, -1, 5, 5, 5, 5, 5, 5, 0,  0,  0,  5, 5, 5 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3,  3,  3,  -1, -1, 3,  3,  3,  -1, 3,  3,  3,  3,  3,  3,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4,  4,  4,  4,  4,  4,  -1, -1, -1, 4,  4,  4,  -1, -1, 4,  4,  4,  -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  8,  8,  8,  1,  1,  8,  8,  8,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4,  4,  4,  4,  4,  4,  1,  1,  1,  4,  4,  4,  1,  1,  4,  4,  4,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4,  4,  4,  4,  4,  4,  1,  1,  1,  4,  4,  4,  1,  1,  4,  4,  4,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             4,  4,  4,  4,  4,  4,  -1, -1, -1, 4,  4,  4,  -1, -1, 4,  4,  4,  -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3, 3, 3, -1, -1, 3,  3, 3, -1, 3,  3,  3, 3, 3, 3,
                             4,  4,  4,  4, 4, 4, -1, -1, -1, 4, 4, 4,  -1, -1, 4, 4, 4, -1 },
                           { -1, -1, -1, 3, 3, 3, -1, -1, 3,  3, 3, -1, 3,  3,  3, 3, 3, 3,
                             4,  4,  4,  4, 4, 4, -1, -1, -1, 4, 4, 4,  -1, -1, 4, 4, 4, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, 4,  4,  4,  -1, -1, 4,  4,  4,  -1,
                             4,  4,  4,  4,  4,  4,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4, 4, 4, 4, 4, 4, -1, -1, -1, 4, 4, 4, -1, -1, 4, 4, 4, -1,
                             4, 4, 4, 4, 4, 4, -1, -1, -1, 4, 4, 4, -1, -1, 4, 4, 4, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  4,  4,  4,  1,  1,  4,  4,  4,  1,
                             4,  4,  4,  4,  4,  4,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  4,  4,  4,  1,  1,  4,  4,  4,  1,
                             4,  4,  4,  4,  4,  4,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 4, 4, 4, 4, 4, 4, 1,  1,  1,  4, 4, 4, 1,  1,  4, 4, 4, 1,
                             4, 4, 4, 4, 4, 4, -1, -1, -1, 4, 4, 4, -1, -1, 4, 4, 4, -1 },
                           { 4, 4, 4, 4, 4, 4, 1,  1,  1,  4, 4, 4, 1,  1,  4, 4, 4, 1,
                             4, 4, 4, 4, 4, 4, -1, -1, -1, 4, 4, 4, -1, -1, 4, 4, 4, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, 3,  3,  3,  -1, -1, 3,  3,  3,  -1, 3,  3,  3,  3,  3,  3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3,  3,  3,  3,  3,  3,
                             -1, -1, -1, 3,  3,  3,  -1, -1, 3,  3,  3,  -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3, 3, 3, -1, -1, 3, 3, 3, -1, 3, 3, 3, 3, 3, 3,
                             -1, -1, -1, 3, 3, 3, -1, -1, 3, 3, 3, -1, 3, 3, 3, 3, 3, 3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, 6,  6, 6, -1, -1, -1, -1, 6, 6, 6,  -1, -1, 6,  6, 6, -1,
                             -1, -1, -1, 6, 6, 6,  -1, -1, 6,  6, 6, -1, -1, -1, -1, 6, 6, 6 },
                           { 0,  0,  6,  6, 6, 0, -1, -1, -1, 6, 6, 6,  -1, -1, 6, 6, 6, -1,
                             -1, -1, -1, 6, 6, 6, -1, -1, 6,  6, 6, -1, 0,  0,  0, 6, 6, 6 },
                           { 0,  0,  6,  6, 6, 0, -1, -1, -1, 6, 6, 6,  -1, -1, 6, 6, 6, -1,
                             -1, -1, -1, 6, 6, 6, -1, -1, 6,  6, 6, -1, 0,  0,  0, 6, 6, 6 },
                           { -1, -1, 6,  6, 6, -1, 1,  1,  1, 6, 6, 6,  1,  1,  6,  6, 6, 1,
                             -1, -1, -1, 6, 6, 6,  -1, -1, 6, 6, 6, -1, -1, -1, -1, 6, 6, 6 },
                           { -1, -1, 6,  6, 6, -1, 1,  1,  1, 6, 6, 6,  1,  1,  6,  6, 6, 1,
                             -1, -1, -1, 6, 6, 6,  -1, -1, 6, 6, 6, -1, -1, -1, -1, 6, 6, 6 },
                           { 0,  0,  6,  6, 6, 0, 1,  1,  1, 6, 6, 6,  1, 1, 6, 6, 6, 1,
                             -1, -1, -1, 6, 6, 6, -1, -1, 6, 6, 6, -1, 0, 0, 0, 6, 6, 6 },
                           { 0,  0,  6,  6, 6, 0, 1,  1,  1, 6, 6, 6,  1, 1, 6, 6, 6, 1,
                             -1, -1, -1, 6, 6, 6, -1, -1, 6, 6, 6, -1, 0, 0, 0, 6, 6, 6 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  9,  9,  9,  2,  2,  9,  9,  9,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  3,  3,  3,  2,  2,  3,  3,  3,  2,  3,  3,  3,  3,  3,  3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  3,  3,  3,  2,  2,  3,  3,  3,  2,  3,  3,  3,  3,  3,  3 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3,  3,  3,  3,  3,  3,
                             2,  2,  2,  3,  3,  3,  2,  2,  3,  3,  3,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3,  3,  3,  3,  3,  3,
                             2,  2,  2,  3,  3,  3,  2,  2,  3,  3,  3,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 3, 3, 3, -1, -1, 3, 3, 3, -1, 3, 3, 3, 3, 3, 3,
                             2,  2,  2,  3, 3, 3, 2,  2,  3, 3, 3, 2,  3, 3, 3, 3, 3, 3 },
                           { -1, -1, -1, 3, 3, 3, -1, -1, 3, 3, 3, -1, 3, 3, 3, 3, 3, 3,
                             2,  2,  2,  3, 3, 3, 2,  2,  3, 3, 3, 2,  3, 3, 3, 3, 3, 3 },
                           { -1, -1, 6, 6, 6, -1, -1, -1, -1, 6, 6, 6, -1, -1, 6,  6, 6, -1,
                             2,  2,  2, 6, 6, 6,  2,  2,  6,  6, 6, 2, -1, -1, -1, 6, 6, 6 },
                           { -1, -1, 6, 6, 6, -1, -1, -1, -1, 6, 6, 6, -1, -1, 6,  6, 6, -1,
                             2,  2,  2, 6, 6, 6,  2,  2,  6,  6, 6, 2, -1, -1, -1, 6, 6, 6 },
                           { 0, 0, 6, 6, 6, 0, -1, -1, -1, 6, 6, 6, -1, -1, 6, 6, 6, -1,
                             2, 2, 2, 6, 6, 6, 2,  2,  6,  6, 6, 2, 0,  0,  0, 6, 6, 6 },
                           { 0, 0, 6, 6, 6, 0, -1, -1, -1, 6, 6, 6, -1, -1, 6, 6, 6, -1,
                             2, 2, 2, 6, 6, 6, 2,  2,  6,  6, 6, 2, 0,  0,  0, 6, 6, 6 },
                           { -1, -1, 6, 6, 6, -1, 1, 1, 1, 6, 6, 6, 1,  1,  6,  6, 6, 1,
                             2,  2,  2, 6, 6, 6,  2, 2, 6, 6, 6, 2, -1, -1, -1, 6, 6, 6 },
                           { -1, -1, 6, 6, 6, -1, 1, 1, 1, 6, 6, 6, 1,  1,  6,  6, 6, 1,
                             2,  2,  2, 6, 6, 6,  2, 2, 6, 6, 6, 2, -1, -1, -1, 6, 6, 6 },
                           { 0, 0, 6, 6, 6, 0, 1, 1, 1, 6, 6, 6, 1, 1, 6, 6, 6, 1,
                             2, 2, 2, 6, 6, 6, 2, 2, 6, 6, 6, 2, 0, 0, 0, 6, 6, 6 },
                           { 0, 0, 6, 6, 6, 0, 1, 1, 1, 6, 6, 6, 1, 1, 6, 6, 6, 1,
                             2, 2, 2, 6, 6, 6, 2, 2, 6, 6, 6, 2, 0, 0, 0, 6, 6, 6 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9,  9,  9,  -1, -1, 9,  9,  9,  -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, 8,  8,  8,  -1, -1, 8,  8,  8,  -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7,  7,  7,
                             -1, -1, 7,  7,  7,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9, 9, 9,  -1, -1, 9,  9, 9, -1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7,  7, 7, -1, -1, -1, -1, 8, 8, 8,  -1, -1, 8,  8, 8, -1 },
                           { -1, -1, -1, 9, 9, 9,  -1, -1, 9,  9, 9, -1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7,  7, 7, -1, -1, -1, -1, 8, 8, 8,  -1, -1, 8,  8, 8, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, 8,  8,  8,  -1, -1, 8,  8,  8,  -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, 8,  8,  8,  -1, -1, 8,  8,  8,  -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  -1, -1, -1, 7,  7,  7,
                             -1, -1, 7,  7,  7,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  -1, -1, -1, 7,  7,  7,
                             -1, -1, 7,  7,  7,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0, 0, 0, 0,  1,  1,  1,  1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, -1, -1, -1, 8, 8, 8, -1, -1, 8,  8, 8, -1 },
                           { 0,  0,  0, 0, 0, 0,  1,  1,  1,  1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, -1, -1, -1, 8, 8, 8, -1, -1, 8,  8, 8, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9,  9,  9,  -1, -1, 9,  9,  9,  -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, 9,  9,  9,  -1, -1, 9,  9,  9,  -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, 0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, 0,  0,  0,  -1, 1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0 },
                           { -1, -1, 0,  0,  0,  -1, 1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7,  7,  7,
                             -1, -1, 7,  7,  7,  -1, 2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7,  7,  7,
                             -1, -1, 7,  7,  7,  -1, 2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9, 9, 9,  -1, -1, 9, 9, 9, -1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7,  7, 7, -1, 2,  2,  2, 2, 2, 2,  0,  0,  0,  0, 0, 0 },
                           { -1, -1, -1, 9, 9, 9,  -1, -1, 9, 9, 9, -1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7,  7, 7, -1, 2,  2,  2, 2, 2, 2,  0,  0,  0,  0, 0, 0 },
                           { -1, -1, 0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  -1, -1, -1, 0,  0,  0 },
                           { -1, -1, 0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  -1, -1, -1, 0,  0,  0 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, 2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { -1, -1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, 2, 2, 2, 2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { -1, -1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, 2, 2, 2, 2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { 0,  0,  0, 0, 0, 0,  1, 1, 1, 1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, 2, 2, 2, 2, 2, 2, 0,  0,  0,  0, 0, 0 },
                           { 0,  0,  0, 0, 0, 0,  1, 1, 1, 1, 1, 1, -1, -1, -1, 7, 7, 7,
                             -1, -1, 7, 7, 7, -1, 2, 2, 2, 2, 2, 2, 0,  0,  0,  0, 0, 0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9,  9,  9,  -1, -1, 9,  9,  9,  -1, 1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9,  9,  9,  -1, -1, 9,  9,  9,  -1, 1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  -1, -1, 1,  1,  1,  -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, 1,  1,  1,  -1, -1, 1,  1,  1,  -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  -1, -1, -1, 1,  1,  1,  -1, -1, 1,  1,  1,  -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, 8,  8,  8,  -1, -1, 8,  8,  8,  -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, 8,  8,  8,  -1, -1, 8,  8,  8,  -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9,  9, 9, -1, 1,  1,  1, 1, 1, 1,
                             2,  2,  2,  2, 2, 2, -1, -1, -1, 8, 8, 8,  -1, -1, 8, 8, 8, -1 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9,  9, 9, -1, 1,  1,  1, 1, 1, 1,
                             2,  2,  2,  2, 2, 2, -1, -1, -1, 8, 8, 8,  -1, -1, 8, 8, 8, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  -1, -1, 1,  1,  1,  -1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  -1, -1, 1,  1,  1,  -1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1,
                             2, 2, 2, 2, 2, 2, -1, -1, -1, 8, 8, 8, -1, -1, 8, 8, 8, -1 },
                           { 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1,
                             2, 2, 2, 2, 2, 2, -1, -1, -1, 8, 8, 8, -1, -1, 8, 8, 8, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { 0, 0, 0, 0, 0, 0, 1,  1,  1,  1, 1, 1, 1,  1,  1, 1, 1, 1,
                             2, 2, 2, 2, 2, 2, -1, -1, -1, 8, 8, 8, -1, -1, 8, 8, 8, -1 },
                           { 0, 0, 0, 0, 0, 0, 1,  1,  1,  1, 1, 1, 1,  1,  1, 1, 1, 1,
                             2, 2, 2, 2, 2, 2, -1, -1, -1, 8, 8, 8, -1, -1, 8, 8, 8, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, 2,  2,  2,  -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, 2,  2,  2,  -1, -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, 2,  2,  2,  -1, -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             -1, -1, -1, 2,  2,  2,  -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             -1, -1, -1, 2,  2,  2,  -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9, 9, 9, -1, 1, 1, 1, 1, 1, 1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2, 2, 2, -1, 0, 0, 0, 0, 0, 0 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9, 9, 9, -1, 1, 1, 1, 1, 1, 1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2, 2, 2, -1, 0, 0, 0, 0, 0, 0 },
                           { -1, -1, 0,  0, 0, -1, -1, -1, -1, 1, 1, 1,  -1, -1, 1,  1, 1, -1,
                             -1, -1, -1, 2, 2, 2,  -1, -1, 2,  2, 2, -1, -1, -1, -1, 0, 0, 0 },
                           { -1, -1, 0,  0, 0, -1, -1, -1, -1, 1, 1, 1,  -1, -1, 1,  1, 1, -1,
                             -1, -1, -1, 2, 2, 2,  -1, -1, 2,  2, 2, -1, -1, -1, -1, 0, 0, 0 },
                           { 0,  0,  0,  0, 0, 0, -1, -1, -1, 1, 1, 1,  -1, -1, 1, 1, 1, -1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2,  2, 2, -1, 0,  0,  0, 0, 0, 0 },
                           { 0,  0,  0,  0, 0, 0, -1, -1, -1, 1, 1, 1,  -1, -1, 1, 1, 1, -1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2,  2, 2, -1, 0,  0,  0, 0, 0, 0 },
                           { -1, -1, 0,  0, 0, -1, 1,  1,  1, 1, 1, 1,  1,  1,  1,  1, 1, 1,
                             -1, -1, -1, 2, 2, 2,  -1, -1, 2, 2, 2, -1, -1, -1, -1, 0, 0, 0 },
                           { -1, -1, 0,  0, 0, -1, 1,  1,  1, 1, 1, 1,  1,  1,  1,  1, 1, 1,
                             -1, -1, -1, 2, 2, 2,  -1, -1, 2, 2, 2, -1, -1, -1, -1, 0, 0, 0 },
                           { 0,  0,  0,  0, 0, 0, 1,  1,  1, 1, 1, 1,  1, 1, 1, 1, 1, 1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2, 2, 2, -1, 0, 0, 0, 0, 0, 0 },
                           { 0,  0,  0,  0, 0, 0, 1,  1,  1, 1, 1, 1,  1, 1, 1, 1, 1, 1,
                             -1, -1, -1, 2, 2, 2, -1, -1, 2, 2, 2, -1, 0, 0, 0, 0, 0, 0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                             2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,  1,  1,  1,  1,  1,
                             2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  -1, -1, -1, -1, -1, -1 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9, 9, 9, -1, 1, 1, 1, 1, 1, 1,
                             2,  2,  2,  2, 2, 2, 2,  2,  2, 2, 2, 2,  0, 0, 0, 0, 0, 0 },
                           { -1, -1, -1, 9, 9, 9, -1, -1, 9, 9, 9, -1, 1, 1, 1, 1, 1, 1,
                             2,  2,  2,  2, 2, 2, 2,  2,  2, 2, 2, 2,  0, 0, 0, 0, 0, 0 },
                           { -1, -1, 0, 0, 0, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1,  1, 1, -1,
                             2,  2,  2, 2, 2, 2,  2,  2,  2,  2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { -1, -1, 0, 0, 0, -1, -1, -1, -1, 1, 1, 1, -1, -1, 1,  1, 1, -1,
                             2,  2,  2, 2, 2, 2,  2,  2,  2,  2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1,
                             2, 2, 2, 2, 2, 2, 2,  2,  2,  2, 2, 2, 0,  0,  0, 0, 0, 0 },
                           { 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1,
                             2, 2, 2, 2, 2, 2, 2,  2,  2,  2, 2, 2, 0,  0,  0, 0, 0, 0 },
                           { -1, -1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1,  1,  1,  1, 1, 1,
                             2,  2,  2, 2, 2, 2,  2, 2, 2, 2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { -1, -1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1,  1,  1,  1, 1, 1,
                             2,  2,  2, 2, 2, 2,  2, 2, 2, 2, 2, 2, -1, -1, -1, 0, 0, 0 },
                           { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                             2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0 },
                           { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                             2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0 } };

  vec<double> offsets;
  //
  vec<WB_IsoGridCell> cellsMemory;
  vec<WB_IsoGridLine> linesMemory;

  Map<Long, int> cells;
  Map<Long, int> linesMap;
  List<int> lines;

  inline WB_IsoGridLine *line_(int idx)
  {
    return &linesMemory[idx];
  }
  inline WB_IsoGridCell *cell_(int idx)
  {
    return &cellsMemory[idx];
  }

  static vec<int> next; // = { 1, 2, 3, 4, 5, 0 };
  static int c; // = 24;

  static double oh; // = 0.5;
  static double ot; // = 1.0 / 3.0;
  static double tt; // = 1.0 - ot;
  static vec<double> vertexOffsets;

  static vec<int> mapFragmentsFromPosOne;
  static vec<int> mapQFromPosOne;
  static vec<int> mapRFromPosOne;
  static vec<int> mapFragmentsFromNegOne;
  static vec<int> mapQFromNegOne;
  static vec<int> mapRFromNegOne;
  static vec<vec<int>> fragmentVertices;

  static double c60;
  static double s60;
  static vec<vec<int>> neighborHexes;

  WB_IsoHexGrid(double originx, double originy, double sizex, double sizey)
  {
    size = { sizex, sizey };
    origin = { originx, originy };
    offsets.resize(50);
    for (int i = 0; i < 25; i++)
    {
      offsets[2 * i] = vertexOffsets[2 * i] * s60;
      offsets[2 * i + 1] = (vertexOffsets[2 * i + 1] - vertexOffsets[2 * i] * c60);
    }
  }

  void setSize(double sizex, double sizey)
  {
    size = { sizex, sizey };
  }

  void clear()
  {
    linesMemory.clear();
    cellsMemory.clear();

    cells.clear();
    linesMap.clear();
  }

  long getCellHash(int q, int r)
  {
    long A = (q >= 0 ? 2 * (long)q : -2 * (long)q - 1);
    long B = (r >= 0 ? 2 * (long)r : -2 * (long)r - 1);
    long C = ((A >= B ? A * A + A + B : A + B * B) / 2);
    return q < 0 && r < 0 || q >= 0 && r >= 0 ? C : -C - 1;
  }

  void clearFragment(int q, int r, int s);

  vec<int> *getLines()
  {
    return &lines;
  }
  WB_IsoGridCell *getCell(long key);

  WB_IsoGridCell *getNeighbor(int q, int r, int i)
  {
    return getCell(getCellHash(q + interHexNeighborQ[i], r + interHexNeighborR[i]));
  }

  WB_IsoGridLine *getLineFromMap(Long key)
  {
    if (linesMap.find(key) == linesMap.end())
    {
      return nullptr;
    }
    return line_(linesMap[key]);
  }

  void addSegment(double q, double r, int i1, int i2);
  void collectLines();

  static vec<int> interHexNeighbor;
  static vec<int> interHexSegment;
  static vec<int> interHexNeighborQ;
  static vec<int> interHexNeighborR;

  void collectInterHexSegments();

  void addCube(int i, int j, int k)
  {
    addCube(i, j, k, 255, 0);
  }

  void addCube(int i, int j, int k, int state)
  {
    addCube(i, j, k, state, 0);
  }

  void addCube(int i, int j, int k, int state, int colorIndex)
  {
    int z = i + j + k;
    int z3 = z / 3;
    int ni = i - z3;
    int nj = j - z3;
    int nk = k - z3;
    int layer = ni + nj + nk;
    while (layer > 1)
    {
      ni--;
      nj--;
      nk--;
      layer = ni + nj + nk;
    }
    while (layer < -1)
    {
      ni++;
      nj++;
      nk++;
      layer = ni + nj + nk;
    }
    int q = i - k;
    int r = j - k;
    int ns;
    switch (layer)
    {

    case 0:
      for (int s = 0; s < 36; s++)
      {
        if (labels[state][s] >= 0)
          addFragment(q, r, s, z, labels[state][s], colorIndex, i, j, k);
      }
      break;

    case +1:
      for (int s = 0; s < 36; s++)
      {
        ns = mapFragmentsFromPosOne[s];
        if (labels[state][s] >= 0)
          addFragment(q + mapQFromPosOne[s], r + mapRFromPosOne[s], ns, z, labels[state][s], colorIndex, i, j, k);
      }
      break;
    case -1:
      for (int s = 0; s < 36; s++)
      {
        ns = mapFragmentsFromNegOne[s];
        if (labels[state][s] >= 0)
          addFragment(q + mapQFromNegOne[s], r + mapRFromNegOne[s], ns, z, labels[state][s], colorIndex, i, j, k);
      }
      break;

    default:
      break;
    }
  }

  // "Add" is conditional and only overwrites if its z-value is higher than
  // current values
  void addFragment(int q, int r, int s, int z, int label, int colorIndex, int i, int j, int k);

  void addFragment(int q, int r, int s, int z, int label, int i, int j, int k)
  {
    addFragment(q, r, s, z, label, 0, i, j, k);
  }

  static vec<int> interTriangleNeighbor;
  static vec<int> interTriangleSegment;
  void collectInterTriangleSegments();

  static vec<int> intraTriangleNeighbor;
  static vec<int> intraTriangleSegment;
  void collectIntraTriangleSegments();

  vec<double> gridCoordinates(double q, double r)
  {
    return { q * s60 * size[0] + origin[0], (r - q * c60) * size[1] + origin[1] };
  }

  void vertex(PApplet *home, double px, double py);

  void drawFragments(PApplet *home);

  void drawFragments(PApplet *home, vec<int> &colors);

  void drawFragments(PApplet *home, int zmin, int zmax);

  void drawFragments(PApplet *home, vec<int> &colors, int zmin, int zmax);

  void drawFragments(PApplet *home, vec<int> &colors, int zmin, int zmax, int znear, int zfar, int mini, int maxi,
                     int minj, int maxj, int mink, int maxk);

  void drawLines(PApplet *home);

  boolean areSeparate(int label1, int label2, int colorIndex1, int colorIndex2, int z1, int z2)
  {
    return label1 != label2 || colorIndex1 != colorIndex2 || std::abs(z1 - z2) > 1;
  }
};
